apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'//GreenDao

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "comte.example.herve.baseapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                JPUSH_PKGNAME: "comte.example.herve.baseapp",
                JPUSH_APPKEY : "9255930854c81695290e226c", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
        ndk {
            abiFilters 'x86', 'armeabi-v7a'
            //选择要添加的对应cpu类型的.so库。
            // 还可以添加 'armeabi', 'armeabi-v7a', 'armeabi-v8a'，'x86', 'x86_64', 'mips', 'mips64'
        }

        //指定jdk版本
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-alpha3', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    /*google布局控件*/
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'com.google.android.material:material:1.0.0'
    /*ButterKnife*/
    implementation "com.jakewharton:butterknife:${versions.buter_kinfe}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.buter_kinfe}"
    /*Json解析工具*/
    implementation "com.alibaba:fastjson:${versions.fast_json}.android"
    /*RxJava*/
    /*==Rxjava end==*/
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"

    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'
    // If you want pre-written Activities and Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.0.0'

    implementation 'com.uber.autodispose:autodispose:1.1.0'
    implementation 'com.uber.autodispose:autodispose-android-archcomponents:1.1.0'
    /*内存泄漏检测工具leakcanary*/
    //    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    //    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    //    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testImplementation 'junit:junit:4.12'
    implementation project(':orm_library')
    implementation project(':common_library')
    implementation project(':http_library')
}
